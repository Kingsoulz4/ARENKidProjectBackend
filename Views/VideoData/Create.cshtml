@page
@model ProjectBackend.Models.VideoData

@{
    ViewData["Title"] = "Create";
    Layout = "/Views/Shared/_AdminLayout.cshtml";
}

<h1>Create</h1>

<h4>VideoData</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form enctype="multipart/form-data" asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <input type="file" name="VideoFile" id="videoInput" />
                <video id="videoPreview" controls="" autoplay="" name="media">

                </video>
            </div>

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="VideoType" class="control-label"></label>
                <input asp-for="VideoType" class="form-control" />
                <span asp-validation-for="VideoType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}


<script>
    document.getElementById('videoInput').addEventListener('change', function (event) {
        const file = event.target.files[0];
        const videoPlayer = document.getElementById('videoPreview');

        if (videoPlayer.hasChildNodes()) {
            videoPlayer.removeChild(videoPlayer.firstChild)
        }
        const source = document.createElement('source');

        const objectURL = URL.createObjectURL(file);
        source.src = objectURL;
        source.type = 'video/mp4';

        videoPlayer.appendChild(source);
        videoPlayer.load();
        videoPlayer.style.display = 'block';
    });

</script>