@model ProjectBackend.Models.AudioData

@{
    ViewData["Title"] = "Edit";
    Layout = "/Views/Shared/_AdminLayout.cshtml";
}

<h1>Edit</h1>

<h4>AudioData</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />

            <div class="form-group">
                <input type="file" name="audioFile" id="audioInput" />
                <video id="audioPreview" controls="" autoplay="" name="media">
                    <source src="@ViewBag.AudioFile" type="audio/mpeg" >
                </video>
            </div>
            <div class="form-group">
                <label asp-for="FilePath" class="control-label"></label>
                <input asp-for="FilePath" class="form-control" />
                <span asp-validation-for="FilePath" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Duration" class="control-label"></label>
                <input asp-for="Duration" class="form-control" />
                <span asp-validation-for="Duration" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AudioType" class="control-label"></label>
                <input asp-for="AudioType" class="form-control" />
                <span asp-validation-for="AudioType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>

</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}


<script>
    document.getElementById('audioInput').addEventListener('change', function (event) {
        const file = event.target.files[0];
        const audioPlayer = document.getElementById('audioPreview');

        if (audioPlayer.hasChildNodes()) {
            audioPlayer.removeChild(audioPlayer.firstChild)
        }
        const source = document.createElement('source');

        const objectURL = URL.createObjectURL(file);
        source.src = objectURL;
        source.type = 'audio/mpeg';

        audioPlayer.appendChild(source);
        audioPlayer.load();
        audioPlayer.style.display = 'block';
    });

</script>